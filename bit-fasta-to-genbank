#!/usr/bin/env python
# -*- coding: utf-8

import sys

import anvio
import anvio.terminal as terminal

from anvio.errors import ConfigError, FilesNPathsError

__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__maintainer__ = "Mike Lee"
__email__ = "michael.lee0517@gmail.com"


run = terminal.Run()
progress = terminal.Progress()


def fasta_to_genbank(args):

    input_fasta = open(args.input_fasta, "r")

    output_gb = open(args.output_gb, "w")

    sequences = list(SeqIO.parse(input_fasta, "fasta"))

    for seq in sequences:
        seq.seq.alphabet = generic_dna

    SeqIO.write(sequences, output_gb, "genbank")

    input_fasta.close()
    output_gb.close()

if __name__ == '__main__':
    import argparse
    from Bio import SeqIO
    from Bio.Alphabet import generic_dna

    parser = argparse.ArgumentParser(description="This script takes a fasta file and converts it into\
                                                genbank format.")

    parser.add_argument('-i', '--input_fasta_file', action='store', dest='input_fasta', required=True,
                        help='input fasta file')
    parser.add_argument("-o", "--output_genbank_file", action="store", dest="output_gb",
                        default="new.gb",\
                        help='Output genbank file (default: "new.gb")')

    args = anvio.get_args(parser)

    try:
        fasta_to_genbank(args)
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
